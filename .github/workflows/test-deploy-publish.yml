name: Test, Deploy, Publish

on:
  push:
    branches: [ '**' ]
    paths-ignore: [ 'terraform/**' ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Test
        run: docker compose run --rm app go test -v ./...

  lint:
    name: Lint and Vulnerability Scan
    runs-on: ubuntu-latest
    timeout-minutes: ${{ fromJSON(vars.DEFAULT_JOB_TIMEOUT_MINUTES) }}
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v5
      with:
        go-version-file: 'go.mod'
        check-latest: true
    - name: golangci-lint
      uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9
      with:
        version: latest
    - name: govulncheck
      run: |
        go install golang.org/x/vuln/cmd/govulncheck@latest
        govulncheck ./...

  deploy:
    name: Deploy
    needs: [ 'test', 'lint' ]
    runs-on: ubuntu-latest
    if: github.ref_name == 'main' || github.ref_name == 'develop'
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      S3_BUCKET: ${{ vars.S3_BUCKET }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build, Sign, and Deploy
        run: docker compose run --rm -e GITHUB_REF_NAME app ./build-sign-deploy.sh
